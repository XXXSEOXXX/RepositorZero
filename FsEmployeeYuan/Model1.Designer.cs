//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("EmployeeYuanModel", "FK_订单Detail_订单", "订单", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FsEmployeeYuan.订单), "订单Detail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FsEmployeeYuan.订单Detail))]

#endregion

namespace FsEmployeeYuan
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“Entities”部分中的连接字符串初始化新 Entities 对象。
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 Entities 对象。
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<订单> 订单
        {
            get
            {
                if ((_订单 == null))
                {
                    _订单 = base.CreateObjectSet<订单>("订单");
                }
                return _订单;
            }
        }
        private ObjectSet<订单> _订单;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<订单Detail> 订单Detail
        {
            get
            {
                if ((_订单Detail == null))
                {
                    _订单Detail = base.CreateObjectSet<订单Detail>("订单Detail");
                }
                return _订单Detail;
            }
        }
        private ObjectSet<订单Detail> _订单Detail;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<物料资料> 物料资料
        {
            get
            {
                if ((_物料资料 == null))
                {
                    _物料资料 = base.CreateObjectSet<物料资料>("物料资料");
                }
                return _物料资料;
            }
        }
        private ObjectSet<物料资料> _物料资料;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<T_test_Linq> T_test_Linq
        {
            get
            {
                if ((_T_test_Linq == null))
                {
                    _T_test_Linq = base.CreateObjectSet<T_test_Linq>("T_test_Linq");
                }
                return _T_test_Linq;
            }
        }
        private ObjectSet<T_test_Linq> _T_test_Linq;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 订单 EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTo订单(订单 订单)
        {
            base.AddObject("订单", 订单);
        }
    
        /// <summary>
        /// 用于向 订单Detail EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTo订单Detail(订单Detail 订单Detail)
        {
            base.AddObject("订单Detail", 订单Detail);
        }
    
        /// <summary>
        /// 用于向 物料资料 EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTo物料资料(物料资料 物料资料)
        {
            base.AddObject("物料资料", 物料资料);
        }
    
        /// <summary>
        /// 用于向 T_test_Linq EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToT_test_Linq(T_test_Linq t_test_Linq)
        {
            base.AddObject("T_test_Linq", t_test_Linq);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeYuanModel", Name="T_test_Linq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class T_test_Linq : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 T_test_Linq 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static T_test_Linq CreateT_test_Linq(global::System.Int32 id)
        {
            T_test_Linq t_test_Linq = new T_test_Linq();
            t_test_Linq.ID = id;
            return t_test_Linq;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sex
        {
            get
            {
                return _Sex;
            }
            set
            {
                OnSexChanging(value);
                ReportPropertyChanging("Sex");
                _Sex = StructuralObject.SetValidValue(value, true, "Sex");
                ReportPropertyChanged("Sex");
                OnSexChanged();
            }
        }
        private global::System.String _Sex;
        partial void OnSexChanging(global::System.String value);
        partial void OnSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true, "Telephone");
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeYuanModel", Name="订单")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class 订单 : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 订单 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static 订单 Create订单(global::System.Int32 id)
        {
            订单 订单 = new 订单();
            订单.ID = id;
            return 订单;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 订单号
        {
            get
            {
                return _订单号;
            }
            set
            {
                On订单号Changing(value);
                ReportPropertyChanging("订单号");
                _订单号 = StructuralObject.SetValidValue(value, true, "订单号");
                ReportPropertyChanged("订单号");
                On订单号Changed();
            }
        }
        private global::System.String _订单号;
        partial void On订单号Changing(global::System.String value);
        partial void On订单号Changed();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeYuanModel", "FK_订单Detail_订单", "订单Detail")]
        public EntityCollection<订单Detail> 订单Detail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<订单Detail>("EmployeeYuanModel.FK_订单Detail_订单", "订单Detail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<订单Detail>("EmployeeYuanModel.FK_订单Detail_订单", "订单Detail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeYuanModel", Name="订单Detail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class 订单Detail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 订单Detail 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static 订单Detail Create订单Detail(global::System.Int32 id)
        {
            订单Detail 订单Detail = new 订单Detail();
            订单Detail.ID = id;
            return 订单Detail;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 单号
        {
            get
            {
                return _单号;
            }
            set
            {
                On单号Changing(value);
                ReportPropertyChanging("单号");
                _单号 = StructuralObject.SetValidValue(value, true, "单号");
                ReportPropertyChanged("单号");
                On单号Changed();
            }
        }
        private global::System.String _单号;
        partial void On单号Changing(global::System.String value);
        partial void On单号Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 物料编号
        {
            get
            {
                return _物料编号;
            }
            set
            {
                On物料编号Changing(value);
                ReportPropertyChanging("物料编号");
                _物料编号 = StructuralObject.SetValidValue(value, true, "物料编号");
                ReportPropertyChanged("物料编号");
                On物料编号Changed();
            }
        }
        private global::System.String _物料编号;
        partial void On物料编号Changing(global::System.String value);
        partial void On物料编号Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 物料名称
        {
            get
            {
                return _物料名称;
            }
            set
            {
                On物料名称Changing(value);
                ReportPropertyChanging("物料名称");
                _物料名称 = StructuralObject.SetValidValue(value, true, "物料名称");
                ReportPropertyChanged("物料名称");
                On物料名称Changed();
            }
        }
        private global::System.String _物料名称;
        partial void On物料名称Changing(global::System.String value);
        partial void On物料名称Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 单位
        {
            get
            {
                return _单位;
            }
            set
            {
                On单位Changing(value);
                ReportPropertyChanging("单位");
                _单位 = StructuralObject.SetValidValue(value, true, "单位");
                ReportPropertyChanged("单位");
                On单位Changed();
            }
        }
        private global::System.String _单位;
        partial void On单位Changing(global::System.String value);
        partial void On单位Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> 数量
        {
            get
            {
                return _数量;
            }
            set
            {
                On数量Changing(value);
                ReportPropertyChanging("数量");
                _数量 = StructuralObject.SetValidValue(value, "数量");
                ReportPropertyChanged("数量");
                On数量Changed();
            }
        }
        private Nullable<global::System.Int32> _数量;
        partial void On数量Changing(Nullable<global::System.Int32> value);
        partial void On数量Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> 单价
        {
            get
            {
                return _单价;
            }
            set
            {
                On单价Changing(value);
                ReportPropertyChanging("单价");
                _单价 = StructuralObject.SetValidValue(value, "单价");
                ReportPropertyChanged("单价");
                On单价Changed();
            }
        }
        private Nullable<global::System.Decimal> _单价;
        partial void On单价Changing(Nullable<global::System.Decimal> value);
        partial void On单价Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> 金额
        {
            get
            {
                return _金额;
            }
            set
            {
                On金额Changing(value);
                ReportPropertyChanging("金额");
                _金额 = StructuralObject.SetValidValue(value, "金额");
                ReportPropertyChanged("金额");
                On金额Changed();
            }
        }
        private Nullable<global::System.Decimal> _金额;
        partial void On金额Changing(Nullable<global::System.Decimal> value);
        partial void On金额Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 备注
        {
            get
            {
                return _备注;
            }
            set
            {
                On备注Changing(value);
                ReportPropertyChanging("备注");
                _备注 = StructuralObject.SetValidValue(value, true, "备注");
                ReportPropertyChanged("备注");
                On备注Changed();
            }
        }
        private global::System.String _备注;
        partial void On备注Changing(global::System.String value);
        partial void On备注Changed();

        #endregion

        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmployeeYuanModel", "FK_订单Detail_订单", "订单")]
        public 订单 订单
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<订单>("EmployeeYuanModel.FK_订单Detail_订单", "订单").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<订单>("EmployeeYuanModel.FK_订单Detail_订单", "订单").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<订单> 订单Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<订单>("EmployeeYuanModel.FK_订单Detail_订单", "订单");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<订单>("EmployeeYuanModel.FK_订单Detail_订单", "订单", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmployeeYuanModel", Name="物料资料")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class 物料资料 : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 物料资料 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static 物料资料 Create物料资料(global::System.Int32 id)
        {
            物料资料 物料资料 = new 物料资料();
            物料资料.ID = id;
            return 物料资料;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 物料编号
        {
            get
            {
                return _物料编号;
            }
            set
            {
                On物料编号Changing(value);
                ReportPropertyChanging("物料编号");
                _物料编号 = StructuralObject.SetValidValue(value, true, "物料编号");
                ReportPropertyChanged("物料编号");
                On物料编号Changed();
            }
        }
        private global::System.String _物料编号;
        partial void On物料编号Changing(global::System.String value);
        partial void On物料编号Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 物料名称
        {
            get
            {
                return _物料名称;
            }
            set
            {
                On物料名称Changing(value);
                ReportPropertyChanging("物料名称");
                _物料名称 = StructuralObject.SetValidValue(value, true, "物料名称");
                ReportPropertyChanged("物料名称");
                On物料名称Changed();
            }
        }
        private global::System.String _物料名称;
        partial void On物料名称Changing(global::System.String value);
        partial void On物料名称Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String 单位
        {
            get
            {
                return _单位;
            }
            set
            {
                On单位Changing(value);
                ReportPropertyChanging("单位");
                _单位 = StructuralObject.SetValidValue(value, true, "单位");
                ReportPropertyChanged("单位");
                On单位Changed();
            }
        }
        private global::System.String _单位;
        partial void On单位Changing(global::System.String value);
        partial void On单位Changed();

        #endregion

    }

    #endregion

}
